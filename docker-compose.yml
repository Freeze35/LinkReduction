
services:

  # Link Reduction - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  app:
    container_name: link-reduction-app
    build:
      context: .                        # –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–±–æ—Ä–∫–∏ ‚Äî –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
      dockerfile: Dockerfile            # –ü—É—Ç—å –∫ Dockerfile –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ports:
      - "8080:8080"                     # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Ä—Ç: —Ö–æ—Å—Ç:–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

    restart: always                     # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ–µ
    env_file:
      - .env                            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
    depends_on:
      - db                              # –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
      - redis                           # –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—ç—à)
    networks:
      - lr-network                     # –û–±—â–∞—è —Å–µ—Ç—å –¥–ª—è —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏

  # üêò PostgreSQL ‚Äî –æ—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  db:
    restart: always
    image: postgres:15
    environment:
      POSTGRES_USER: user             # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
      POSTGRES_PASSWORD: password     # –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      POSTGRES_DB: postgres           # –ò–º—è —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    volumes:
      - db-data:/var/lib/postgresql/data  # –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –±–∞–∑—ã (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ)
    ports:
      - "5432:5432"                   # –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ PostgreSQL –Ω–∞—Ä—É–∂—É
    networks:
      - lr-network                   # –û–±—â–∞—è —Å–µ—Ç—å –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏

  # üß† Redis ‚Äî in-memory key-value —Ö—Ä–∞–Ω–∏–ª–∏—â–µ + –≤–æ–∑–º–æ–∂–Ω—ã–π gRPC-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  redis:
    image: redis:7-alpine          # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –æ–±–ª–µ–≥—á—ë–Ω–Ω—ã–π –æ–±—Ä–∞–∑ Redis
    ports:
      - "6379:6379"               # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç Redis
    restart: always               # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—Å—Ç–∞—Ä—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    volumes:
      - redis_data:/data          # –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ Redis –Ω–∞ volume
    networks:
      - lr-network               # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ –Ω—É–∂–Ω–æ–π —Å–µ—Ç–∏

  # üìà Prometheus ‚Äî —Å–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–µ—Ç—Ä–∏–∫
  prometheus:
      image: prom/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      networks:
        - lr-network

  # üü° Kafka (—Ä–µ–∂–∏–º KRaft, –±–µ–∑ Zookeeper) ‚Äî –±—Ä–æ–∫–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
  kafka:
    image: bitnami/kafka:3.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_KRAFT_CLUSTER_ID: "abcdefghijklmnopqrstuv"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - lr-network

  # üìä Grafana ‚Äî –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –∏–∑ Prometheus –∏ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"                        # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin      # –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      - GF_SECURITY_ADMIN_PASSWORD=admin  # –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    restart: always
    depends_on:
      - prometheus                              # –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ prometheus (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ)
    networks:
      - lr-network

volumes:
  db-data:        # Volume –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö PostgreSQL
  redis_data:     # Volume –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Redis

networks:
  lr-network:    # –û–±—â–∞—è bridge-—Å–µ—Ç—å, —á—Ç–æ–±—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã "–≤–∏–¥–µ–ª–∏" –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –ø–æ –∏–º–µ–Ω–∏
    driver: bridge
